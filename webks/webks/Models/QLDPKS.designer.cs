#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace webks.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLDPKS")]
	public partial class QLDPKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTIENICH(TIENICH instance);
    partial void UpdateTIENICH(TIENICH instance);
    partial void DeleteTIENICH(TIENICH instance);
    partial void InsertBANGLOC(BANGLOC instance);
    partial void UpdateBANGLOC(BANGLOC instance);
    partial void DeleteBANGLOC(BANGLOC instance);
    partial void InsertBOOKING(BOOKING instance);
    partial void UpdateBOOKING(BOOKING instance);
    partial void DeleteBOOKING(BOOKING instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertHOME_DDNB(HOME_DDNB instance);
    partial void UpdateHOME_DDNB(HOME_DDNB instance);
    partial void DeleteHOME_DDNB(HOME_DDNB instance);
    partial void InsertHOME_SLIDE(HOME_SLIDE instance);
    partial void UpdateHOME_SLIDE(HOME_SLIDE instance);
    partial void DeleteHOME_SLIDE(HOME_SLIDE instance);
    partial void InsertKHACHSAN(KHACHSAN instance);
    partial void UpdateKHACHSAN(KHACHSAN instance);
    partial void DeleteKHACHSAN(KHACHSAN instance);
    partial void InsertKSTIENICH(KSTIENICH instance);
    partial void UpdateKSTIENICH(KSTIENICH instance);
    partial void DeleteKSTIENICH(KSTIENICH instance);
    partial void InsertLOAIPHONG(LOAIPHONG instance);
    partial void UpdateLOAIPHONG(LOAIPHONG instance);
    partial void DeleteLOAIPHONG(LOAIPHONG instance);
    partial void InsertNCC(NCC instance);
    partial void UpdateNCC(NCC instance);
    partial void DeleteNCC(NCC instance);
    partial void InsertOPTIONLOC(OPTIONLOC instance);
    partial void UpdateOPTIONLOC(OPTIONLOC instance);
    partial void DeleteOPTIONLOC(OPTIONLOC instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertPHONGDV_FEE(PHONGDV_FEE instance);
    partial void UpdatePHONGDV_FEE(PHONGDV_FEE instance);
    partial void DeletePHONGDV_FEE(PHONGDV_FEE instance);
    partial void InsertPHONGDV_FREE(PHONGDV_FREE instance);
    partial void UpdatePHONGDV_FREE(PHONGDV_FREE instance);
    partial void DeletePHONGDV_FREE(PHONGDV_FREE instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public QLDPKSDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLDPKSConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLDPKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDPKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDPKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLDPKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TIENICH> TIENICHes
		{
			get
			{
				return this.GetTable<TIENICH>();
			}
		}
		
		public System.Data.Linq.Table<BANGLOC> BANGLOCs
		{
			get
			{
				return this.GetTable<BANGLOC>();
			}
		}
		
		public System.Data.Linq.Table<BOOKING> BOOKINGs
		{
			get
			{
				return this.GetTable<BOOKING>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<HOME_DDNB> HOME_DDNBs
		{
			get
			{
				return this.GetTable<HOME_DDNB>();
			}
		}
		
		public System.Data.Linq.Table<HOME_SLIDE> HOME_SLIDEs
		{
			get
			{
				return this.GetTable<HOME_SLIDE>();
			}
		}
		
		public System.Data.Linq.Table<KHACHSAN> KHACHSANs
		{
			get
			{
				return this.GetTable<KHACHSAN>();
			}
		}
		
		public System.Data.Linq.Table<KSTIENICH> KSTIENICHes
		{
			get
			{
				return this.GetTable<KSTIENICH>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHONG> LOAIPHONGs
		{
			get
			{
				return this.GetTable<LOAIPHONG>();
			}
		}
		
		public System.Data.Linq.Table<NCC> NCCs
		{
			get
			{
				return this.GetTable<NCC>();
			}
		}
		
		public System.Data.Linq.Table<OPTIONLOC> OPTIONLOCs
		{
			get
			{
				return this.GetTable<OPTIONLOC>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<PHONGDV_FEE> PHONGDV_FEEs
		{
			get
			{
				return this.GetTable<PHONGDV_FEE>();
			}
		}
		
		public System.Data.Linq.Table<PHONGDV_FREE> PHONGDV_FREEs
		{
			get
			{
				return this.GetTable<PHONGDV_FREE>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIENICH")]
	public partial class TIENICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTIENICH;
		
		private string _TENTIENICH;
		
		private string _ICON;
		
		private EntitySet<KSTIENICH> _KSTIENICHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTIENICHChanging(int value);
    partial void OnIDTIENICHChanged();
    partial void OnTENTIENICHChanging(string value);
    partial void OnTENTIENICHChanged();
    partial void OnICONChanging(string value);
    partial void OnICONChanged();
    #endregion
		
		public TIENICH()
		{
			this._KSTIENICHes = new EntitySet<KSTIENICH>(new Action<KSTIENICH>(this.attach_KSTIENICHes), new Action<KSTIENICH>(this.detach_KSTIENICHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIENICH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTIENICH
		{
			get
			{
				return this._IDTIENICH;
			}
			set
			{
				if ((this._IDTIENICH != value))
				{
					this.OnIDTIENICHChanging(value);
					this.SendPropertyChanging();
					this._IDTIENICH = value;
					this.SendPropertyChanged("IDTIENICH");
					this.OnIDTIENICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTIENICH", DbType="NVarChar(100)")]
		public string TENTIENICH
		{
			get
			{
				return this._TENTIENICH;
			}
			set
			{
				if ((this._TENTIENICH != value))
				{
					this.OnTENTIENICHChanging(value);
					this.SendPropertyChanging();
					this._TENTIENICH = value;
					this.SendPropertyChanged("TENTIENICH");
					this.OnTENTIENICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICON", DbType="NVarChar(50)")]
		public string ICON
		{
			get
			{
				return this._ICON;
			}
			set
			{
				if ((this._ICON != value))
				{
					this.OnICONChanging(value);
					this.SendPropertyChanging();
					this._ICON = value;
					this.SendPropertyChanged("ICON");
					this.OnICONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIENICH_KSTIENICH", Storage="_KSTIENICHes", ThisKey="IDTIENICH", OtherKey="IDTIENICH")]
		public EntitySet<KSTIENICH> KSTIENICHes
		{
			get
			{
				return this._KSTIENICHes;
			}
			set
			{
				this._KSTIENICHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KSTIENICHes(KSTIENICH entity)
		{
			this.SendPropertyChanging();
			entity.TIENICH = this;
		}
		
		private void detach_KSTIENICHes(KSTIENICH entity)
		{
			this.SendPropertyChanging();
			entity.TIENICH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGLOC")]
	public partial class BANGLOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDBANG;
		
		private string _TENBANG;
		
		private EntitySet<OPTIONLOC> _OPTIONLOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBANGChanging(string value);
    partial void OnIDBANGChanged();
    partial void OnTENBANGChanging(string value);
    partial void OnTENBANGChanged();
    #endregion
		
		public BANGLOC()
		{
			this._OPTIONLOCs = new EntitySet<OPTIONLOC>(new Action<OPTIONLOC>(this.attach_OPTIONLOCs), new Action<OPTIONLOC>(this.detach_OPTIONLOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBANG", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDBANG
		{
			get
			{
				return this._IDBANG;
			}
			set
			{
				if ((this._IDBANG != value))
				{
					this.OnIDBANGChanging(value);
					this.SendPropertyChanging();
					this._IDBANG = value;
					this.SendPropertyChanged("IDBANG");
					this.OnIDBANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBANG", DbType="NVarChar(50)")]
		public string TENBANG
		{
			get
			{
				return this._TENBANG;
			}
			set
			{
				if ((this._TENBANG != value))
				{
					this.OnTENBANGChanging(value);
					this.SendPropertyChanging();
					this._TENBANG = value;
					this.SendPropertyChanged("TENBANG");
					this.OnTENBANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANGLOC_OPTIONLOC", Storage="_OPTIONLOCs", ThisKey="IDBANG", OtherKey="IDBANG")]
		public EntitySet<OPTIONLOC> OPTIONLOCs
		{
			get
			{
				return this._OPTIONLOCs;
			}
			set
			{
				this._OPTIONLOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPTIONLOCs(OPTIONLOC entity)
		{
			this.SendPropertyChanging();
			entity.BANGLOC = this;
		}
		
		private void detach_OPTIONLOCs(OPTIONLOC entity)
		{
			this.SendPropertyChanging();
			entity.BANGLOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOOKING")]
	public partial class BOOKING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MABOOK;
		
		private string _MAPHONG;
		
		private System.Nullable<int> _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYVAO;
		
		private System.Nullable<System.DateTime> _NGAYDI;
		
		private string _YEUCAU;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<PHONG> _PHONG;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABOOKChanging(int value);
    partial void OnMABOOKChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMAKHChanging(System.Nullable<int> value);
    partial void OnMAKHChanged();
    partial void OnNGAYVAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYVAOChanged();
    partial void OnNGAYDIChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDIChanged();
    partial void OnYEUCAUChanging(string value);
    partial void OnYEUCAUChanged();
    #endregion
		
		public BOOKING()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHONG = default(EntityRef<PHONG>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABOOK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MABOOK
		{
			get
			{
				return this._MABOOK;
			}
			set
			{
				if ((this._MABOOK != value))
				{
					this.OnMABOOKChanging(value);
					this.SendPropertyChanging();
					this._MABOOK = value;
					this.SendPropertyChanged("MABOOK");
					this.OnMABOOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Int")]
		public System.Nullable<int> MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYVAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYVAO
		{
			get
			{
				return this._NGAYVAO;
			}
			set
			{
				if ((this._NGAYVAO != value))
				{
					this.OnNGAYVAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYVAO = value;
					this.SendPropertyChanged("NGAYVAO");
					this.OnNGAYVAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDI", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDI
		{
			get
			{
				return this._NGAYDI;
			}
			set
			{
				if ((this._NGAYDI != value))
				{
					this.OnNGAYDIChanging(value);
					this.SendPropertyChanging();
					this._NGAYDI = value;
					this.SendPropertyChanged("NGAYDI");
					this.OnNGAYDIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YEUCAU", DbType="NVarChar(100)")]
		public string YEUCAU
		{
			get
			{
				return this._YEUCAU;
			}
			set
			{
				if ((this._YEUCAU != value))
				{
					this.OnYEUCAUChanging(value);
					this.SendPropertyChanging();
					this._YEUCAU = value;
					this.SendPropertyChanged("YEUCAU");
					this.OnYEUCAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKING_HOADON", Storage="_HOADONs", ThisKey="MABOOK", OtherKey="MABOOK")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_BOOKING", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.BOOKINGs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.BOOKINGs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BOOKING", Storage="_TAIKHOAN", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.BOOKINGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.BOOKINGs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BOOKING = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.BOOKING = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _TENDV;
		
		private EntitySet<PHONGDV_FEE> _PHONGDV_FEEs;
		
		private EntitySet<PHONGDV_FREE> _PHONGDV_FREEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    #endregion
		
		public DICHVU()
		{
			this._PHONGDV_FEEs = new EntitySet<PHONGDV_FEE>(new Action<PHONGDV_FEE>(this.attach_PHONGDV_FEEs), new Action<PHONGDV_FEE>(this.detach_PHONGDV_FEEs));
			this._PHONGDV_FREEs = new EntitySet<PHONGDV_FREE>(new Action<PHONGDV_FREE>(this.attach_PHONGDV_FREEs), new Action<PHONGDV_FREE>(this.detach_PHONGDV_FREEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(100)")]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHONGDV_FEE", Storage="_PHONGDV_FEEs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<PHONGDV_FEE> PHONGDV_FEEs
		{
			get
			{
				return this._PHONGDV_FEEs;
			}
			set
			{
				this._PHONGDV_FEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHONGDV_FREE", Storage="_PHONGDV_FREEs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<PHONGDV_FREE> PHONGDV_FREEs
		{
			get
			{
				return this._PHONGDV_FREEs;
			}
			set
			{
				this._PHONGDV_FREEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGDV_FEEs(PHONGDV_FEE entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_PHONGDV_FEEs(PHONGDV_FEE entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
		
		private void attach_PHONGDV_FREEs(PHONGDV_FREE entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_PHONGDV_FREEs(PHONGDV_FREE entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHD;
		
		private int _MABOOK;
		
		private System.Nullable<int> _TONGTIEN;
		
		private string _HOTEN;
		
		private string _SDT;
		
		private string _EMAIL;
		
		private EntityRef<BOOKING> _BOOKING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(int value);
    partial void OnMAHDChanged();
    partial void OnMABOOKChanging(int value);
    partial void OnMABOOKChanged();
    partial void OnTONGTIENChanging(System.Nullable<int> value);
    partial void OnTONGTIENChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
		
		public HOADON()
		{
			this._BOOKING = default(EntityRef<BOOKING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABOOK", DbType="Int NOT NULL")]
		public int MABOOK
		{
			get
			{
				return this._MABOOK;
			}
			set
			{
				if ((this._MABOOK != value))
				{
					if (this._BOOKING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABOOKChanging(value);
					this.SendPropertyChanging();
					this._MABOOK = value;
					this.SendPropertyChanged("MABOOK");
					this.OnMABOOKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int")]
		public System.Nullable<int> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(100)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOOKING_HOADON", Storage="_BOOKING", ThisKey="MABOOK", OtherKey="MABOOK", IsForeignKey=true)]
		public BOOKING BOOKING
		{
			get
			{
				return this._BOOKING.Entity;
			}
			set
			{
				BOOKING previousValue = this._BOOKING.Entity;
				if (((previousValue != value) 
							|| (this._BOOKING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOOKING.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._BOOKING.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MABOOK = value.MABOOK;
					}
					else
					{
						this._MABOOK = default(int);
					}
					this.SendPropertyChanged("BOOKING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOME_DDNB")]
	public partial class HOME_DDNB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDDIADIEM;
		
		private string _TENDIADIEM;
		
		private string _img;
		
		private EntitySet<KHACHSAN> _KHACHSANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDIADIEMChanging(string value);
    partial void OnIDDIADIEMChanged();
    partial void OnTENDIADIEMChanging(string value);
    partial void OnTENDIADIEMChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    #endregion
		
		public HOME_DDNB()
		{
			this._KHACHSANs = new EntitySet<KHACHSAN>(new Action<KHACHSAN>(this.attach_KHACHSANs), new Action<KHACHSAN>(this.detach_KHACHSANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIADIEM", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDDIADIEM
		{
			get
			{
				return this._IDDIADIEM;
			}
			set
			{
				if ((this._IDDIADIEM != value))
				{
					this.OnIDDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._IDDIADIEM = value;
					this.SendPropertyChanged("IDDIADIEM");
					this.OnIDDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDIADIEM", DbType="NVarChar(MAX)")]
		public string TENDIADIEM
		{
			get
			{
				return this._TENDIADIEM;
			}
			set
			{
				if ((this._TENDIADIEM != value))
				{
					this.OnTENDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._TENDIADIEM = value;
					this.SendPropertyChanged("TENDIADIEM");
					this.OnTENDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(MAX)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOME_DDNB_KHACHSAN", Storage="_KHACHSANs", ThisKey="IDDIADIEM", OtherKey="IDDIADIEM")]
		public EntitySet<KHACHSAN> KHACHSANs
		{
			get
			{
				return this._KHACHSANs;
			}
			set
			{
				this._KHACHSANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.HOME_DDNB = this;
		}
		
		private void detach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.HOME_DDNB = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOME_SLIDE")]
	public partial class HOME_SLIDE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDSLIDE;
		
		private string _SLIDECONTENT;
		
		private string _IMG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSLIDEChanging(string value);
    partial void OnIDSLIDEChanged();
    partial void OnSLIDECONTENTChanging(string value);
    partial void OnSLIDECONTENTChanged();
    partial void OnIMGChanging(string value);
    partial void OnIMGChanged();
    #endregion
		
		public HOME_SLIDE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSLIDE", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDSLIDE
		{
			get
			{
				return this._IDSLIDE;
			}
			set
			{
				if ((this._IDSLIDE != value))
				{
					this.OnIDSLIDEChanging(value);
					this.SendPropertyChanging();
					this._IDSLIDE = value;
					this.SendPropertyChanged("IDSLIDE");
					this.OnIDSLIDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLIDECONTENT", DbType="NVarChar(MAX)")]
		public string SLIDECONTENT
		{
			get
			{
				return this._SLIDECONTENT;
			}
			set
			{
				if ((this._SLIDECONTENT != value))
				{
					this.OnSLIDECONTENTChanging(value);
					this.SendPropertyChanging();
					this._SLIDECONTENT = value;
					this.SendPropertyChanged("SLIDECONTENT");
					this.OnSLIDECONTENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMG", DbType="NVarChar(MAX)")]
		public string IMG
		{
			get
			{
				return this._IMG;
			}
			set
			{
				if ((this._IMG != value))
				{
					this.OnIMGChanging(value);
					this.SendPropertyChanging();
					this._IMG = value;
					this.SendPropertyChanged("IMG");
					this.OnIMGChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHSAN")]
	public partial class KHACHSAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHACHSAN;
		
		private string _MANCC;
		
		private string _TENKHACHSAN;
		
		private System.Nullable<int> _SOLUONGPHONG;
		
		private System.Nullable<int> _SOSAO;
		
		private string _TINH;
		
		private string _QUAN;
		
		private string _PHUONG;
		
		private string _DUONG;
		
		private string _DIACHICUTHE;
		
		private string _ANHKS1;
		
		private string _ANHKS2;
		
		private string _ANHKS3;
		
		private string _ANHKS4;
		
		private string _ANHKS5;
		
		private string _MOTA;
		
		private string _DIADANH;
		
		private string _DANHGIA;
		
		private System.Nullable<double> _DIEM;
		
		private string _IDDIADIEM;
		
		private EntitySet<KSTIENICH> _KSTIENICHes;
		
		private EntitySet<PHONG> _PHONGs;
		
		private EntityRef<HOME_DDNB> _HOME_DDNB;
		
		private EntityRef<NCC> _NCC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHACHSANChanging(string value);
    partial void OnMAKHACHSANChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENKHACHSANChanging(string value);
    partial void OnTENKHACHSANChanged();
    partial void OnSOLUONGPHONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGPHONGChanged();
    partial void OnSOSAOChanging(System.Nullable<int> value);
    partial void OnSOSAOChanged();
    partial void OnTINHChanging(string value);
    partial void OnTINHChanged();
    partial void OnQUANChanging(string value);
    partial void OnQUANChanged();
    partial void OnPHUONGChanging(string value);
    partial void OnPHUONGChanged();
    partial void OnDUONGChanging(string value);
    partial void OnDUONGChanged();
    partial void OnDIACHICUTHEChanging(string value);
    partial void OnDIACHICUTHEChanged();
    partial void OnANHKS1Changing(string value);
    partial void OnANHKS1Changed();
    partial void OnANHKS2Changing(string value);
    partial void OnANHKS2Changed();
    partial void OnANHKS3Changing(string value);
    partial void OnANHKS3Changed();
    partial void OnANHKS4Changing(string value);
    partial void OnANHKS4Changed();
    partial void OnANHKS5Changing(string value);
    partial void OnANHKS5Changed();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnDIADANHChanging(string value);
    partial void OnDIADANHChanged();
    partial void OnDANHGIAChanging(string value);
    partial void OnDANHGIAChanged();
    partial void OnDIEMChanging(System.Nullable<double> value);
    partial void OnDIEMChanged();
    partial void OnIDDIADIEMChanging(string value);
    partial void OnIDDIADIEMChanged();
    #endregion
		
		public KHACHSAN()
		{
			this._KSTIENICHes = new EntitySet<KSTIENICH>(new Action<KSTIENICH>(this.attach_KSTIENICHes), new Action<KSTIENICH>(this.detach_KSTIENICHes));
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			this._HOME_DDNB = default(EntityRef<HOME_DDNB>);
			this._NCC = default(EntityRef<NCC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHSAN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHACHSAN
		{
			get
			{
				return this._MAKHACHSAN;
			}
			set
			{
				if ((this._MAKHACHSAN != value))
				{
					this.OnMAKHACHSANChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHSAN = value;
					this.SendPropertyChanged("MAKHACHSAN");
					this.OnMAKHACHSANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHACHSAN", DbType="NVarChar(100)")]
		public string TENKHACHSAN
		{
			get
			{
				return this._TENKHACHSAN;
			}
			set
			{
				if ((this._TENKHACHSAN != value))
				{
					this.OnTENKHACHSANChanging(value);
					this.SendPropertyChanging();
					this._TENKHACHSAN = value;
					this.SendPropertyChanged("TENKHACHSAN");
					this.OnTENKHACHSANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGPHONG", DbType="Int")]
		public System.Nullable<int> SOLUONGPHONG
		{
			get
			{
				return this._SOLUONGPHONG;
			}
			set
			{
				if ((this._SOLUONGPHONG != value))
				{
					this.OnSOLUONGPHONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGPHONG = value;
					this.SendPropertyChanged("SOLUONGPHONG");
					this.OnSOLUONGPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOSAO", DbType="Int")]
		public System.Nullable<int> SOSAO
		{
			get
			{
				return this._SOSAO;
			}
			set
			{
				if ((this._SOSAO != value))
				{
					this.OnSOSAOChanging(value);
					this.SendPropertyChanging();
					this._SOSAO = value;
					this.SendPropertyChanged("SOSAO");
					this.OnSOSAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINH", DbType="NVarChar(100)")]
		public string TINH
		{
			get
			{
				return this._TINH;
			}
			set
			{
				if ((this._TINH != value))
				{
					this.OnTINHChanging(value);
					this.SendPropertyChanging();
					this._TINH = value;
					this.SendPropertyChanged("TINH");
					this.OnTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUAN", DbType="NVarChar(100)")]
		public string QUAN
		{
			get
			{
				return this._QUAN;
			}
			set
			{
				if ((this._QUAN != value))
				{
					this.OnQUANChanging(value);
					this.SendPropertyChanging();
					this._QUAN = value;
					this.SendPropertyChanged("QUAN");
					this.OnQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHUONG", DbType="NVarChar(100)")]
		public string PHUONG
		{
			get
			{
				return this._PHUONG;
			}
			set
			{
				if ((this._PHUONG != value))
				{
					this.OnPHUONGChanging(value);
					this.SendPropertyChanging();
					this._PHUONG = value;
					this.SendPropertyChanged("PHUONG");
					this.OnPHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DUONG", DbType="NVarChar(100)")]
		public string DUONG
		{
			get
			{
				return this._DUONG;
			}
			set
			{
				if ((this._DUONG != value))
				{
					this.OnDUONGChanging(value);
					this.SendPropertyChanging();
					this._DUONG = value;
					this.SendPropertyChanged("DUONG");
					this.OnDUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHICUTHE", DbType="NVarChar(100)")]
		public string DIACHICUTHE
		{
			get
			{
				return this._DIACHICUTHE;
			}
			set
			{
				if ((this._DIACHICUTHE != value))
				{
					this.OnDIACHICUTHEChanging(value);
					this.SendPropertyChanging();
					this._DIACHICUTHE = value;
					this.SendPropertyChanged("DIACHICUTHE");
					this.OnDIACHICUTHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKS1", DbType="NChar(100)")]
		public string ANHKS1
		{
			get
			{
				return this._ANHKS1;
			}
			set
			{
				if ((this._ANHKS1 != value))
				{
					this.OnANHKS1Changing(value);
					this.SendPropertyChanging();
					this._ANHKS1 = value;
					this.SendPropertyChanged("ANHKS1");
					this.OnANHKS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKS2", DbType="NChar(100)")]
		public string ANHKS2
		{
			get
			{
				return this._ANHKS2;
			}
			set
			{
				if ((this._ANHKS2 != value))
				{
					this.OnANHKS2Changing(value);
					this.SendPropertyChanging();
					this._ANHKS2 = value;
					this.SendPropertyChanged("ANHKS2");
					this.OnANHKS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKS3", DbType="NChar(100)")]
		public string ANHKS3
		{
			get
			{
				return this._ANHKS3;
			}
			set
			{
				if ((this._ANHKS3 != value))
				{
					this.OnANHKS3Changing(value);
					this.SendPropertyChanging();
					this._ANHKS3 = value;
					this.SendPropertyChanged("ANHKS3");
					this.OnANHKS3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKS4", DbType="NChar(100)")]
		public string ANHKS4
		{
			get
			{
				return this._ANHKS4;
			}
			set
			{
				if ((this._ANHKS4 != value))
				{
					this.OnANHKS4Changing(value);
					this.SendPropertyChanging();
					this._ANHKS4 = value;
					this.SendPropertyChanged("ANHKS4");
					this.OnANHKS4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANHKS5", DbType="NChar(100)")]
		public string ANHKS5
		{
			get
			{
				return this._ANHKS5;
			}
			set
			{
				if ((this._ANHKS5 != value))
				{
					this.OnANHKS5Changing(value);
					this.SendPropertyChanging();
					this._ANHKS5 = value;
					this.SendPropertyChanged("ANHKS5");
					this.OnANHKS5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(100)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIADANH", DbType="NVarChar(100)")]
		public string DIADANH
		{
			get
			{
				return this._DIADANH;
			}
			set
			{
				if ((this._DIADANH != value))
				{
					this.OnDIADANHChanging(value);
					this.SendPropertyChanging();
					this._DIADANH = value;
					this.SendPropertyChanged("DIADANH");
					this.OnDIADANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DANHGIA", DbType="NVarChar(100)")]
		public string DANHGIA
		{
			get
			{
				return this._DANHGIA;
			}
			set
			{
				if ((this._DANHGIA != value))
				{
					this.OnDANHGIAChanging(value);
					this.SendPropertyChanging();
					this._DANHGIA = value;
					this.SendPropertyChanged("DANHGIA");
					this.OnDANHGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIEM", DbType="Float")]
		public System.Nullable<double> DIEM
		{
			get
			{
				return this._DIEM;
			}
			set
			{
				if ((this._DIEM != value))
				{
					this.OnDIEMChanging(value);
					this.SendPropertyChanging();
					this._DIEM = value;
					this.SendPropertyChanged("DIEM");
					this.OnDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDIADIEM", DbType="NChar(10)")]
		public string IDDIADIEM
		{
			get
			{
				return this._IDDIADIEM;
			}
			set
			{
				if ((this._IDDIADIEM != value))
				{
					if (this._HOME_DDNB.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDIADIEMChanging(value);
					this.SendPropertyChanging();
					this._IDDIADIEM = value;
					this.SendPropertyChanged("IDDIADIEM");
					this.OnIDDIADIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_KSTIENICH", Storage="_KSTIENICHes", ThisKey="MAKHACHSAN", OtherKey="MAKHACHSAN")]
		public EntitySet<KSTIENICH> KSTIENICHes
		{
			get
			{
				return this._KSTIENICHes;
			}
			set
			{
				this._KSTIENICHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_PHONG", Storage="_PHONGs", ThisKey="MAKHACHSAN", OtherKey="MAKHACHSAN")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOME_DDNB_KHACHSAN", Storage="_HOME_DDNB", ThisKey="IDDIADIEM", OtherKey="IDDIADIEM", IsForeignKey=true)]
		public HOME_DDNB HOME_DDNB
		{
			get
			{
				return this._HOME_DDNB.Entity;
			}
			set
			{
				HOME_DDNB previousValue = this._HOME_DDNB.Entity;
				if (((previousValue != value) 
							|| (this._HOME_DDNB.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOME_DDNB.Entity = null;
						previousValue.KHACHSANs.Remove(this);
					}
					this._HOME_DDNB.Entity = value;
					if ((value != null))
					{
						value.KHACHSANs.Add(this);
						this._IDDIADIEM = value.IDDIADIEM;
					}
					else
					{
						this._IDDIADIEM = default(string);
					}
					this.SendPropertyChanged("HOME_DDNB");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_KHACHSAN", Storage="_NCC", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NCC NCC
		{
			get
			{
				return this._NCC.Entity;
			}
			set
			{
				NCC previousValue = this._NCC.Entity;
				if (((previousValue != value) 
							|| (this._NCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NCC.Entity = null;
						previousValue.KHACHSANs.Remove(this);
					}
					this._NCC.Entity = value;
					if ((value != null))
					{
						value.KHACHSANs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NCC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KSTIENICHes(KSTIENICH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_KSTIENICHes(KSTIENICH entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHSAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KSTIENICH")]
	public partial class KSTIENICH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHACHSAN;
		
		private int _IDTIENICH;
		
		private string _GHICHU;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
		private EntityRef<TIENICH> _TIENICH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHACHSANChanging(string value);
    partial void OnMAKHACHSANChanged();
    partial void OnIDTIENICHChanging(int value);
    partial void OnIDTIENICHChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public KSTIENICH()
		{
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			this._TIENICH = default(EntityRef<TIENICH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHSAN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHACHSAN
		{
			get
			{
				return this._MAKHACHSAN;
			}
			set
			{
				if ((this._MAKHACHSAN != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHACHSANChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHSAN = value;
					this.SendPropertyChanged("MAKHACHSAN");
					this.OnMAKHACHSANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTIENICH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTIENICH
		{
			get
			{
				return this._IDTIENICH;
			}
			set
			{
				if ((this._IDTIENICH != value))
				{
					if (this._TIENICH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTIENICHChanging(value);
					this.SendPropertyChanging();
					this._IDTIENICH = value;
					this.SendPropertyChanged("IDTIENICH");
					this.OnIDTIENICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(50)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_KSTIENICH", Storage="_KHACHSAN", ThisKey="MAKHACHSAN", OtherKey="MAKHACHSAN", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.KSTIENICHes.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.KSTIENICHes.Add(this);
						this._MAKHACHSAN = value.MAKHACHSAN;
					}
					else
					{
						this._MAKHACHSAN = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIENICH_KSTIENICH", Storage="_TIENICH", ThisKey="IDTIENICH", OtherKey="IDTIENICH", IsForeignKey=true)]
		public TIENICH TIENICH
		{
			get
			{
				return this._TIENICH.Entity;
			}
			set
			{
				TIENICH previousValue = this._TIENICH.Entity;
				if (((previousValue != value) 
							|| (this._TIENICH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIENICH.Entity = null;
						previousValue.KSTIENICHes.Remove(this);
					}
					this._TIENICH.Entity = value;
					if ((value != null))
					{
						value.KSTIENICHes.Add(this);
						this._IDTIENICH = value.IDTIENICH;
					}
					else
					{
						this._IDTIENICH = default(int);
					}
					this.SendPropertyChanged("TIENICH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHONG")]
	public partial class LOAIPHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAIPHONG;
		
		private EntitySet<PHONG> _PHONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIPHONGChanging(string value);
    partial void OnTENLOAIPHONGChanged();
    #endregion
		
		public LOAIPHONG()
		{
			this._PHONGs = new EntitySet<PHONG>(new Action<PHONG>(this.attach_PHONGs), new Action<PHONG>(this.detach_PHONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAIPHONG", DbType="NVarChar(100)")]
		public string TENLOAIPHONG
		{
			get
			{
				return this._TENLOAIPHONG;
			}
			set
			{
				if ((this._TENLOAIPHONG != value))
				{
					this.OnTENLOAIPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENLOAIPHONG = value;
					this.SendPropertyChanged("TENLOAIPHONG");
					this.OnTENLOAIPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_PHONGs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<PHONG> PHONGs
		{
			get
			{
				return this._PHONGs;
			}
			set
			{
				this._PHONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = this;
		}
		
		private void detach_PHONGs(PHONG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NCC")]
	public partial class NCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private EntitySet<KHACHSAN> _KHACHSANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    #endregion
		
		public NCC()
		{
			this._KHACHSANs = new EntitySet<KHACHSAN>(new Action<KHACHSAN>(this.attach_KHACHSANs), new Action<KHACHSAN>(this.detach_KHACHSANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(100)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NCC_KHACHSAN", Storage="_KHACHSANs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<KHACHSAN> KHACHSANs
		{
			get
			{
				return this._KHACHSANs;
			}
			set
			{
				this._KHACHSANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.NCC = this;
		}
		
		private void detach_KHACHSANs(KHACHSAN entity)
		{
			this.SendPropertyChanging();
			entity.NCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPTIONLOC")]
	public partial class OPTIONLOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDKIEULOC;
		
		private string _TENKIEULOC;
		
		private string _IDBANG;
		
		private EntityRef<BANGLOC> _BANGLOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKIEULOCChanging(string value);
    partial void OnIDKIEULOCChanged();
    partial void OnTENKIEULOCChanging(string value);
    partial void OnTENKIEULOCChanged();
    partial void OnIDBANGChanging(string value);
    partial void OnIDBANGChanged();
    #endregion
		
		public OPTIONLOC()
		{
			this._BANGLOC = default(EntityRef<BANGLOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKIEULOC", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDKIEULOC
		{
			get
			{
				return this._IDKIEULOC;
			}
			set
			{
				if ((this._IDKIEULOC != value))
				{
					this.OnIDKIEULOCChanging(value);
					this.SendPropertyChanging();
					this._IDKIEULOC = value;
					this.SendPropertyChanged("IDKIEULOC");
					this.OnIDKIEULOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKIEULOC", DbType="NVarChar(50)")]
		public string TENKIEULOC
		{
			get
			{
				return this._TENKIEULOC;
			}
			set
			{
				if ((this._TENKIEULOC != value))
				{
					this.OnTENKIEULOCChanging(value);
					this.SendPropertyChanging();
					this._TENKIEULOC = value;
					this.SendPropertyChanged("TENKIEULOC");
					this.OnTENKIEULOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBANG", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDBANG
		{
			get
			{
				return this._IDBANG;
			}
			set
			{
				if ((this._IDBANG != value))
				{
					if (this._BANGLOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBANGChanging(value);
					this.SendPropertyChanging();
					this._IDBANG = value;
					this.SendPropertyChanged("IDBANG");
					this.OnIDBANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BANGLOC_OPTIONLOC", Storage="_BANGLOC", ThisKey="IDBANG", OtherKey="IDBANG", IsForeignKey=true)]
		public BANGLOC BANGLOC
		{
			get
			{
				return this._BANGLOC.Entity;
			}
			set
			{
				BANGLOC previousValue = this._BANGLOC.Entity;
				if (((previousValue != value) 
							|| (this._BANGLOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BANGLOC.Entity = null;
						previousValue.OPTIONLOCs.Remove(this);
					}
					this._BANGLOC.Entity = value;
					if ((value != null))
					{
						value.OPTIONLOCs.Add(this);
						this._IDBANG = value.IDBANG;
					}
					else
					{
						this._IDBANG = default(string);
					}
					this.SendPropertyChanged("BANGLOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHACHSAN;
		
		private string _MALOAI;
		
		private string _MAPHONG;
		
		private string _TENPHONG;
		
		private System.Nullable<int> _DIENTICH;
		
		private string _QUANGCANH;
		
		private System.Nullable<int> _GIA;
		
		private System.Nullable<double> _GIAM;
		
		private string _ANH1;
		
		private string _ANH2;
		
		private string _ANH3;
		
		private string _ANH4;
		
		private string _ANH5;
		
		private System.Nullable<int> _SOGIUONG;
		
		private string _LOAIGIUONG;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<int> _SOKHACH;
		
		private EntitySet<BOOKING> _BOOKINGs;
		
		private EntitySet<PHONGDV_FEE> _PHONGDV_FEEs;
		
		private EntitySet<PHONGDV_FREE> _PHONGDV_FREEs;
		
		private EntityRef<KHACHSAN> _KHACHSAN;
		
		private EntityRef<LOAIPHONG> _LOAIPHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHACHSANChanging(string value);
    partial void OnMAKHACHSANChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    partial void OnDIENTICHChanging(System.Nullable<int> value);
    partial void OnDIENTICHChanged();
    partial void OnQUANGCANHChanging(string value);
    partial void OnQUANGCANHChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    partial void OnGIAMChanging(System.Nullable<double> value);
    partial void OnGIAMChanged();
    partial void OnANH1Changing(string value);
    partial void OnANH1Changed();
    partial void OnANH2Changing(string value);
    partial void OnANH2Changed();
    partial void OnANH3Changing(string value);
    partial void OnANH3Changed();
    partial void OnANH4Changing(string value);
    partial void OnANH4Changed();
    partial void OnANH5Changing(string value);
    partial void OnANH5Changed();
    partial void OnSOGIUONGChanging(System.Nullable<int> value);
    partial void OnSOGIUONGChanged();
    partial void OnLOAIGIUONGChanging(string value);
    partial void OnLOAIGIUONGChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnSOKHACHChanging(System.Nullable<int> value);
    partial void OnSOKHACHChanged();
    #endregion
		
		public PHONG()
		{
			this._BOOKINGs = new EntitySet<BOOKING>(new Action<BOOKING>(this.attach_BOOKINGs), new Action<BOOKING>(this.detach_BOOKINGs));
			this._PHONGDV_FEEs = new EntitySet<PHONGDV_FEE>(new Action<PHONGDV_FEE>(this.attach_PHONGDV_FEEs), new Action<PHONGDV_FEE>(this.detach_PHONGDV_FEEs));
			this._PHONGDV_FREEs = new EntitySet<PHONGDV_FREE>(new Action<PHONGDV_FREE>(this.attach_PHONGDV_FREEs), new Action<PHONGDV_FREE>(this.detach_PHONGDV_FREEs));
			this._KHACHSAN = default(EntityRef<KHACHSAN>);
			this._LOAIPHONG = default(EntityRef<LOAIPHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHACHSAN", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MAKHACHSAN
		{
			get
			{
				return this._MAKHACHSAN;
			}
			set
			{
				if ((this._MAKHACHSAN != value))
				{
					if (this._KHACHSAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHACHSANChanging(value);
					this.SendPropertyChanging();
					this._MAKHACHSAN = value;
					this.SendPropertyChanged("MAKHACHSAN");
					this.OnMAKHACHSANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAIPHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(100)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTICH", DbType="Int")]
		public System.Nullable<int> DIENTICH
		{
			get
			{
				return this._DIENTICH;
			}
			set
			{
				if ((this._DIENTICH != value))
				{
					this.OnDIENTICHChanging(value);
					this.SendPropertyChanging();
					this._DIENTICH = value;
					this.SendPropertyChanged("DIENTICH");
					this.OnDIENTICHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANGCANH", DbType="NVarChar(100)")]
		public string QUANGCANH
		{
			get
			{
				return this._QUANGCANH;
			}
			set
			{
				if ((this._QUANGCANH != value))
				{
					this.OnQUANGCANHChanging(value);
					this.SendPropertyChanging();
					this._QUANGCANH = value;
					this.SendPropertyChanged("QUANGCANH");
					this.OnQUANGCANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAM", DbType="Float")]
		public System.Nullable<double> GIAM
		{
			get
			{
				return this._GIAM;
			}
			set
			{
				if ((this._GIAM != value))
				{
					this.OnGIAMChanging(value);
					this.SendPropertyChanging();
					this._GIAM = value;
					this.SendPropertyChanged("GIAM");
					this.OnGIAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH1", DbType="NVarChar(100)")]
		public string ANH1
		{
			get
			{
				return this._ANH1;
			}
			set
			{
				if ((this._ANH1 != value))
				{
					this.OnANH1Changing(value);
					this.SendPropertyChanging();
					this._ANH1 = value;
					this.SendPropertyChanged("ANH1");
					this.OnANH1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH2", DbType="NVarChar(100)")]
		public string ANH2
		{
			get
			{
				return this._ANH2;
			}
			set
			{
				if ((this._ANH2 != value))
				{
					this.OnANH2Changing(value);
					this.SendPropertyChanging();
					this._ANH2 = value;
					this.SendPropertyChanged("ANH2");
					this.OnANH2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH3", DbType="NVarChar(100)")]
		public string ANH3
		{
			get
			{
				return this._ANH3;
			}
			set
			{
				if ((this._ANH3 != value))
				{
					this.OnANH3Changing(value);
					this.SendPropertyChanging();
					this._ANH3 = value;
					this.SendPropertyChanged("ANH3");
					this.OnANH3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH4", DbType="NVarChar(100)")]
		public string ANH4
		{
			get
			{
				return this._ANH4;
			}
			set
			{
				if ((this._ANH4 != value))
				{
					this.OnANH4Changing(value);
					this.SendPropertyChanging();
					this._ANH4 = value;
					this.SendPropertyChanged("ANH4");
					this.OnANH4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANH5", DbType="NVarChar(100)")]
		public string ANH5
		{
			get
			{
				return this._ANH5;
			}
			set
			{
				if ((this._ANH5 != value))
				{
					this.OnANH5Changing(value);
					this.SendPropertyChanging();
					this._ANH5 = value;
					this.SendPropertyChanged("ANH5");
					this.OnANH5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOGIUONG", DbType="Int")]
		public System.Nullable<int> SOGIUONG
		{
			get
			{
				return this._SOGIUONG;
			}
			set
			{
				if ((this._SOGIUONG != value))
				{
					this.OnSOGIUONGChanging(value);
					this.SendPropertyChanging();
					this._SOGIUONG = value;
					this.SendPropertyChanged("SOGIUONG");
					this.OnSOGIUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIGIUONG", DbType="NVarChar(100)")]
		public string LOAIGIUONG
		{
			get
			{
				return this._LOAIGIUONG;
			}
			set
			{
				if ((this._LOAIGIUONG != value))
				{
					this.OnLOAIGIUONGChanging(value);
					this.SendPropertyChanging();
					this._LOAIGIUONG = value;
					this.SendPropertyChanged("LOAIGIUONG");
					this.OnLOAIGIUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOKHACH", DbType="Int")]
		public System.Nullable<int> SOKHACH
		{
			get
			{
				return this._SOKHACH;
			}
			set
			{
				if ((this._SOKHACH != value))
				{
					this.OnSOKHACHChanging(value);
					this.SendPropertyChanging();
					this._SOKHACH = value;
					this.SendPropertyChanged("SOKHACH");
					this.OnSOKHACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_BOOKING", Storage="_BOOKINGs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<BOOKING> BOOKINGs
		{
			get
			{
				return this._BOOKINGs;
			}
			set
			{
				this._BOOKINGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHONGDV_FEE", Storage="_PHONGDV_FEEs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<PHONGDV_FEE> PHONGDV_FEEs
		{
			get
			{
				return this._PHONGDV_FEEs;
			}
			set
			{
				this._PHONGDV_FEEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHONGDV_FREE", Storage="_PHONGDV_FREEs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<PHONGDV_FREE> PHONGDV_FREEs
		{
			get
			{
				return this._PHONGDV_FREEs;
			}
			set
			{
				this._PHONGDV_FREEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHSAN_PHONG", Storage="_KHACHSAN", ThisKey="MAKHACHSAN", OtherKey="MAKHACHSAN", IsForeignKey=true)]
		public KHACHSAN KHACHSAN
		{
			get
			{
				return this._KHACHSAN.Entity;
			}
			set
			{
				KHACHSAN previousValue = this._KHACHSAN.Entity;
				if (((previousValue != value) 
							|| (this._KHACHSAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHSAN.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._KHACHSAN.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MAKHACHSAN = value.MAKHACHSAN;
					}
					else
					{
						this._MAKHACHSAN = default(string);
					}
					this.SendPropertyChanged("KHACHSAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHONG_PHONG", Storage="_LOAIPHONG", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAIPHONG LOAIPHONG
		{
			get
			{
				return this._LOAIPHONG.Entity;
			}
			set
			{
				LOAIPHONG previousValue = this._LOAIPHONG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHONG.Entity = null;
						previousValue.PHONGs.Remove(this);
					}
					this._LOAIPHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAIPHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOOKINGs(BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_BOOKINGs(BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_PHONGDV_FEEs(PHONGDV_FEE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_PHONGDV_FEEs(PHONGDV_FEE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
		
		private void attach_PHONGDV_FREEs(PHONGDV_FREE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_PHONGDV_FREEs(PHONGDV_FREE entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGDV_FEE")]
	public partial class PHONGDV_FEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _MADV;
		
		private System.Nullable<int> _GIA;
		
		private string _MADVFEE;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnGIAChanging(System.Nullable<int> value);
    partial void OnGIAChanged();
    partial void OnMADVFEEChanging(string value);
    partial void OnMADVFEEChanged();
    #endregion
		
		public PHONGDV_FEE()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10)")]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Int")]
		public System.Nullable<int> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADVFEE", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADVFEE
		{
			get
			{
				return this._MADVFEE;
			}
			set
			{
				if ((this._MADVFEE != value))
				{
					this.OnMADVFEEChanging(value);
					this.SendPropertyChanging();
					this._MADVFEE = value;
					this.SendPropertyChanged("MADVFEE");
					this.OnMADVFEEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHONGDV_FEE", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.PHONGDV_FEEs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.PHONGDV_FEEs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHONGDV_FEE", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.PHONGDV_FEEs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGDV_FEEs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONGDV_FREE")]
	public partial class PHONGDV_FREE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _MADV;
		
		private string _GHICHU;
		
		private string _MADVFREE;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnMADVFREEChanging(string value);
    partial void OnMADVFREEChanged();
    #endregion
		
		public PHONGDV_FREE()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="Char(10)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="Char(10)")]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(100)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADVFREE", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADVFREE
		{
			get
			{
				return this._MADVFREE;
			}
			set
			{
				if ((this._MADVFREE != value))
				{
					this.OnMADVFREEChanging(value);
					this.SendPropertyChanging();
					this._MADVFREE = value;
					this.SendPropertyChanged("MADVFREE");
					this.OnMADVFREEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_PHONGDV_FREE", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.PHONGDV_FREEs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.PHONGDV_FREEs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_PHONGDV_FREE", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.PHONGDV_FREEs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.PHONGDV_FREEs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAKH;
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private EntitySet<BOOKING> _BOOKINGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(int value);
    partial void OnMAKHChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._BOOKINGs = new EntitySet<BOOKING>(new Action<BOOKING>(this.attach_BOOKINGs), new Action<BOOKING>(this.detach_BOOKINGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NChar(50)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NChar(50)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BOOKING", Storage="_BOOKINGs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<BOOKING> BOOKINGs
		{
			get
			{
				return this._BOOKINGs;
			}
			set
			{
				this._BOOKINGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BOOKINGs(BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_BOOKINGs(BOOKING entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
}
#pragma warning restore 1591
