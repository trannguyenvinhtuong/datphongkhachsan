using BLL_DAL;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace GUI
{
    public partial class FrmNhanVien : DevExpress.XtraEditors.XtraForm
    {
        DATPHONG_BLLDAL DatPhong_BLL = new DATPHONG_BLLDAL();
        QLDPKSDataContext NV = new QLDPKSDataContext();
        public FrmNhanVien()
        {
            InitializeComponent();
            //// This line of code is generated by Data Source Configuration Wizard
            //nhanvienTableAdapter1.Fill(dataSet_QLDP1.NHANVIEN);
           
        }

        private string _message;
        public FrmNhanVien(string Message) : this()
        {
            _message = Message;
            //txtMa.Text = _message;

        }

        private void groupControl2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void groupControl2_CustomButtonClick(object sender, DevExpress.XtraBars.Docking2010.BaseButtonEventArgs e)
        {
            if (Convert.ToInt32(e.Button.Properties.Tag) == 3)
            {
                string vValue = txtMa.Text;
                if (kiemtratrung(vValue) == 0)
                {
                    if (txtEmail.Text == "")
                    {
                        XtraMessageBox.Show("Nhập email.", "Thông báo");
                    }
                    else if (isEmail(txtEmail.Text) == false)
                    {
                        XtraMessageBox.Show("Email không hợp lệ", "Thông báo.");
                    }
                    else if (txtSDT.Text == "")
                    {
                        XtraMessageBox.Show("Nhập số điện thoại.", "Thông báo");
                    }
                    else if (IsValidPhone(txtSDT.Text) == false)
                    {
                        XtraMessageBox.Show("Số điện thoại không hợp lệ.", "Thông báo");

                    }
                    else if (comboGioiTinh.Text == "")
                    {
                        XtraMessageBox.Show("Chọn giới tính.", "Thông báo");
                    }
                    else if (dteNgaySinh.Text == "")
                    {
                        XtraMessageBox.Show("Nhập ngày sinh", "Thông báo");
                    }
                    else if (ptanh.Image == null)
                    {
                        XtraMessageBox.Show("Chọn ảnh", "Thông báo");
                    }
                    //Lưu sản phẩm
                    else
                    {
                        NHANVIEN nv = new NHANVIEN();

                        nv.MANV = txtMa.Text;
                        nv.TENNV = txtTen.Text;
                        nv.MATKHAU = txtMK.Text;
                        nv.HOATDONG = Convert.ToBoolean(checkHD.Checked.ToString());
                        nv.EMAIL = txtEmail.Text;
                        nv.SDT = txtSDT.Text;
                        nv.DIACHI = txtDiaChi.Text;
                        nv.HINHANH = imageToByteArray(ptanh.Image);
                        nv.GIOITINH = comboGioiTinh.SelectedItem.ToString();
                        nv.NGAYSINH = Convert.ToDateTime(dteNgaySinh.EditValue.ToString());
                        NV.NHANVIENs.InsertOnSubmit(nv);
                        NV.SubmitChanges();
                        XtraMessageBox.Show("Lưu thành công", "Thông báo");
                        loaddl();
                        gridControl1.Enabled = true;
                    }
                }
                else
                {
                    NHANVIEN nv = new NHANVIEN();
                    nv = NV.NHANVIENs.Where(s => s.MANV == txtMa.Text).Single();
                    nv.TENNV = txtTen.Text;
                    nv.GIOITINH = comboGioiTinh.Text;
                    nv.NGAYSINH = DateTime.Parse(dteNgaySinh.Text);
                    nv.HINHANH = imageToByteArray(ptanh.Image);
                    nv.EMAIL = txtEmail.Text;
                    nv.MATKHAU = txtMK.Text;
                    nv.SDT = txtSDT.Text;
                    nv.DIACHI = txtDiaChi.Text;
                    nv.HOATDONG = Convert.ToBoolean(checkHD.Checked.ToString());
                    NV.SubmitChanges();
                    MessageBox.Show("Sửa thành công.");
                    loaddl();
                    enable();
                }
            }
            //Sửa
            else if (Convert.ToInt32(e.Button.Properties.Tag) == 5)
            {
                if (txtMa.Text == "")
                {
                    XtraMessageBox.Show("Chọn nhân viên cần sửa.", "Thông báo");
                }
                else
                {
                    ptanh.Enabled = true;
                    txtMa.Enabled = false;
                    txtDiaChi.Enabled = true;
                    txtEmail.Enabled = true;
                    txtMK.Enabled = false;
                    txtSDT.Enabled = true;
                    txtTen.Enabled = true;
                    checkHD.Enabled = true;
                    comboGioiTinh.Enabled = true;
                    dteNgaySinh.Enabled = true;
                    groupControl2.CustomHeaderButtons[2].Properties.Enabled = true;
                    groupControl2.CustomHeaderButtons[0].Properties.Enabled = false;
                    groupControl2.CustomHeaderButtons[1].Properties.Enabled = false;
                    groupControl2.CustomHeaderButtons[4].Properties.Enabled = false;
                    groupControl2.CustomHeaderButtons[5].Properties.Enabled = false;
                    groupControl2.CustomHeaderButtons[6].Properties.Enabled = false;
                }
            }
            //Xoá
            else if (Convert.ToInt32(e.Button.Properties.Tag) == 6)
            {
                if (txtMa.Text == "")
                {
                    XtraMessageBox.Show("Vui lòng chọn nhân viên.", "Thông báo");
                }
                else if (txtMa.Text == _message)
                {
                    XtraMessageBox.Show("Tài khoản đang đăng nhập.", "Thông báo.");
                }
                else
                {
                    NHANVIEN nhanvien = new NHANVIEN();
                    nhanvien = NV.NHANVIENs.Where(s => s.MANV == txtMa.Text).Single();
                    nhanvien.HOATDONG = false;
                    NV.SubmitChanges();
                    txtMa.Text = "";
                    txtTen.Text = "";
                    txtSDT.Text = "";
                    txtMK.Text = "";
                    txtEmail.Text = "";
                    txtDiaChi.Text = "";
                    dteNgaySinh.Text = "";
                    comboGioiTinh.Text = "";
                    ptanh.Image = null;
                    checkHD.Checked = false;
                    XtraMessageBox.Show("Đã khoá thành công.", "Thông báo");
                    loaddl();
                }

            }
            else if (Convert.ToInt32(e.Button.Properties.Tag) == 1)
            {
                enabletrue();
                ramdomma();
                txtMK.Text = CreateRandomPassword();
                gridControl1.Enabled = false;

                //XtraMessageBox.Show("Thêm nè", "Thông báo");
            }
            else if (Convert.ToInt32(e.Button.Properties.Tag) == 7)
            {
                rptNhanVien rpt1 = new rptNhanVien();
                rpt1.Parameters["ma"].Value = txtMa.Text;
                rpt1.Parameters["ten"].Value = txtTen.Text;
                rpt1.Parameters["ngaysinh"].Value = dteNgaySinh.Text;
                rpt1.Parameters["diachi"].Value = txtDiaChi.Text;
                rpt1.Parameters["gioitinh"].Value = comboGioiTinh.Text;
                rpt1.Parameters["matkhau"].Value = txtMK.Text;
                rpt1.Parameters["email"].Value = txtEmail.Text;
                rpt1.Parameters["sdt"].Value = txtSDT.Text;
                rpt1.Parameters["hinhanh"].Value = ptanh.Text;
                if (MessageBox.Show("Xác nhận thông tin Export", "Thông báo", MessageBoxButtons.YesNo) == DialogResult.Yes)
                {

                    FolderBrowserDialog chuc = new FolderBrowserDialog();
                    if (chuc.ShowDialog() == DialogResult.OK)
                    {
                        string filePath = chuc.SelectedPath + "\\ThongTin_NhanVien" + txtMa.Text + ".docx";
                        rpt1.ExportToDocx(filePath);
                        Process.Start(filePath);
                    }

                }

                // rpt.ShowPreviewDialog();
                //rpt1.ShowPreviewDialog();
            }
        }

        private void ptanh_Click(object sender, EventArgs e)
        {
            string filename;
            using (OpenFileDialog ofd = new OpenFileDialog() { Filter = "JPEG|*.jpg", ValidateNames = true, Multiselect = false })
            {
                if (ofd.ShowDialog() == DialogResult.OK)
                {
                    filename = ofd.FileName;
                    ptanh.Image = Image.FromFile(filename);
                }
            }
        }

        private void FrmNhanVien_Load(object sender, EventArgs e)
        {
            loaddl();
            enable();
        }

        private void enable()
        {
            ptanh.Enabled = false;
            txtMa.Enabled = false;
            txtDiaChi.Enabled = false;
            txtEmail.Enabled = false;
            txtMK.Enabled = false;
            txtSDT.Enabled = false;
            txtTen.Enabled = false;
            checkHD.Enabled = false;
            comboGioiTinh.Enabled = false;
            dteNgaySinh.Enabled = false;
            groupControl2.CustomHeaderButtons[2].Properties.Enabled = false;
            groupControl2.CustomHeaderButtons[0].Properties.Enabled = true;
            groupControl2.CustomHeaderButtons[1].Properties.Enabled = true;
            groupControl2.CustomHeaderButtons[4].Properties.Enabled = true;
            groupControl2.CustomHeaderButtons[5].Properties.Enabled = true;
            groupControl2.CustomHeaderButtons[6].Properties.Enabled = true;
        }

        private void enabletrue()
        {
            ptanh.Enabled = true;
            ptanh.Image = null;
            txtMa.Enabled = false;
            txtMa.Text = "";
            txtDiaChi.Enabled = true;
            txtDiaChi.Text = "";
            txtEmail.Enabled = true;
            txtEmail.Text = "";
            txtMK.Enabled = false;
            txtMK.Text = "";
            txtSDT.Enabled = true;
            txtSDT.Text = "";
            txtTen.Enabled = true;
            txtTen.Text = "";
            checkHD.Enabled = true;
            checkHD.Checked = false;
            comboGioiTinh.Enabled = true;
            comboGioiTinh.Text = "";
            dteNgaySinh.Enabled = true;
            dteNgaySinh.Text = "";
            groupControl2.CustomHeaderButtons[2].Properties.Enabled = true;
            groupControl2.CustomHeaderButtons[0].Properties.Enabled = false;
            groupControl2.CustomHeaderButtons[1].Properties.Enabled = false;
            groupControl2.CustomHeaderButtons[4].Properties.Enabled = false;
            groupControl2.CustomHeaderButtons[5].Properties.Enabled = false;
            groupControl2.CustomHeaderButtons[6].Properties.Enabled = false;
        }
        private void loaddl()
        {
            var nhanvien = from nv in NV.NHANVIENs
                           select new
                           {
                               MãNhânViên = nv.MANV,
                               TênNhânViên = nv.TENNV,
                               GiớiTính = nv.GIOITINH,
                               NgàySinh = nv.NGAYSINH,
                               SốĐiệnThoại = nv.SDT,
                               ĐịaChỉ = nv.DIACHI,
                               Email = nv.EMAIL,
                               HìnhẢnh = nv.HINHANH,
                               MậtKhẩu = nv.MATKHAU,
                               HoạtĐộng = nv.HOATDONG,
                               Quyền = nv.QUYEN
                           };
            gridControl1.DataSource = nhanvien.ToList();
            
        }

        public byte[] imageToByteArray(System.Drawing.Image imageIn)
        {
            MemoryStream ms = new MemoryStream();
            imageIn.Save(ms, System.Drawing.Imaging.ImageFormat.Gif);
            return ms.ToArray();
        }
        //byte[] -> ảnh
        public Image byteArrayToImage(byte[] byteArrayIn)
        {
            MemoryStream ms = new MemoryStream(byteArrayIn);
            Image returnImage = Image.FromStream(ms);
            return returnImage;
        }
        //email
        private bool isEmail(string inputEmail)
        {
            inputEmail = inputEmail ?? string.Empty;
            string strRegex = @"^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}" +
                  @"\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\" +
                  @".)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$";
            Regex re = new Regex(strRegex);
            if (re.IsMatch(inputEmail))
                return (true);
            else
                return (false);
        }
        public static bool IsValidPhone(string value)
        {
            value = value ?? string.Empty;
            string pattern = @"^-*[0-9,\.?\-?\(?\)?\ ]+$";
            Regex re = new Regex(pattern);
            if (re.IsMatch(value))
                return (true);
            else
                return (false);
        }
        private int kiemtratrung(string ma)
        {
            for (int i = 0; i < gridanhsachnhanvien.RowCount; i++)
            {
                if (ma == gridanhsachnhanvien.GetRowCellValue(i, "MãNhânViên").ToString())
                {
                    return 1;
                }
            }
            return 0;
        }
        private void ramdomma()
        {
            Random ran = new Random();
            int so = ran.Next(01, 9999);
            txtMa.Text = "20" + DateTime.Now.ToString("MMyy") + so;
        }
        private static string CreateRandomPassword(int length = 15)
        {
            // Create a string of characters, numbers, special characters that allowed in the password  
            string validChars = "123QWEasd";
            Random random = new Random();

            // Select one random character at a time from the string  
            // and create an array of chars  
            char[] chars = new char[length];
            for (int i = 0; i < length; i++)
            {
                chars[i] = validChars[random.Next(0, validChars.Length)];
            }
            return new string(chars);
        }

        private void gridControl1_Click(object sender, EventArgs e)
        {
            int rowHandle = gridanhsachnhanvien.FocusedRowHandle;

            if (gridanhsachnhanvien.SelectedRowsCount == 0)
            {
                gridControl1.Enabled = true;
            }
            else
            {
                string n = gridanhsachnhanvien.GetRowCellValue(rowHandle, "MãNhânViên").ToString();
                txtMa.Text = n;
                txtTen.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "TênNhânViên").ToString();
                comboGioiTinh.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "GiớiTính").ToString();
                DateTime date = DateTime.Parse(gridanhsachnhanvien.GetRowCellValue(rowHandle, "NgàySinh").ToString());
                string dateString = String.Format("{0:dd/MM/yyyy}", date);
                dteNgaySinh.Text = dateString;
                if (gridanhsachnhanvien.GetRowCellValue(rowHandle, "HoạtĐộng").ToString() == "True")
                {
                    checkHD.Checked = true;
                }
                else
                {
                    checkHD.Checked = false;
                }

                txtEmail.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "Email").ToString();
                txtMK.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "MậtKhẩu").ToString();
                txtSDT.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "SốĐiệnThoại").ToString();
                txtDiaChi.Text = gridanhsachnhanvien.GetRowCellValue(rowHandle, "ĐịaChỉ").ToString();
                var data = (from t in NV.NHANVIENs
                            where t.MANV == n
                            select t.HINHANH.ToArray()
                           ).SingleOrDefault();
                ptanh.Image = byteArrayToImage(data);
            }
        }

        private void txtSDT_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar) && (e.KeyChar != '.'))
            {
                e.Handled = true;
            }
        }
    }
}